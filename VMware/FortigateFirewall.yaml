tosca_definitions_version: cloudify_dsl_1_2

imports:
  - http://www.getcloudify.org/spec/cloudify/3.3.1/types.yaml
  - http://www.getcloudify.org/spec/fabric-plugin/1.3.1/plugin.yaml
  - http://www.getcloudify.org/spec/vsphere-plugin/1.3.1/plugin.yaml

inputs:

  template_name:
    description: >
      Template to clone VMs from
    default: Fortigate

  external_network:
    description: >
      Which external network to deploy the VM on
    default: VM Network

  external_network_distributed:
    description: >
      Whether the external network is on a distributed switch
    default: true

  management_network:
    description: >
      Which management network to deploy the VM on
    default: VM Network

  management_network_distributed:
    description: >
      Whether the management network is on a distributed switch
    default: true

  vsphere_username:
    type: string
    description: >
      User login for vsphere
  vsphere_password:
    type: string
    default: ''
    description: >
      User password for vsphere
  vsphere_host:
    description: >
      vSphere host
    type: string
  vsphere_port:
    description: >
      port which vCenter Server system uses to monitor data transfer
      from SDK clients
    default: 443
    type: string
  vsphere_datacenter_name:
    description: >
      datacenter name
    default: Datacenter
    type: string
  vsphere_resource_pool_name:
    description: >
      Resource pool name. Represents a set of physical resources:
      a single host, a subset of a host's resources, or resources
      spanning multiple hosts
    default: Resources
    type: string
  vsphere_auto_placement:
    description: >
      signifies if server is to be automatically placed on a host
    default: false
    type: boolean

  public_network:
    type: string
    default: Public-Net

  application_network:
    type: string
    default: Application-Net

  management_network_name:
    type: string
    default: cloudify-management-network

node_types:

  connection_configuration:
     derived_from: cloudify.nodes.Root
     properties:
       connection_config: {}

node_templates:

  connection_configuration:
    type: connection_configuration
    properties:
      connection_config:
        username: { get_input: vsphere_username }
        password: { get_input: vsphere_password }
        host: { get_input: vsphere_host }
        port: { get_input: vsphere_port }
        datacenter_name: { get_input: vsphere_datacenter_name }
        resource_pool_name: { get_input: vsphere_resource_pool_name }
        auto_placement: { get_input: vsphere_auto_placement }


  fortinetServer:
    type: cloudify.vsphere.nodes.Server
    properties:
      server:
        name: Fortigate
        template: { get_input:  template_name }
        cpus: 1
        memory: 1024

      install_agent: false

      networking:
        connect_networks:

          - management: true
            switch_distributed: { get_input: management_network_distributed }
            name: { get_input: management_network_name }

          - external: true
            name: { get_input: public_network }
            switch_distributed: false

          - external: false
            name: { get_input: application_network }
            switch_distributed: false

#
#          - external: true
#            switch_distributed: { get_input: external_network_switch_distributed }
#            use_dhcp: { get_input: external_network_use_dhcp }
#            network: { get_input: external_network_cidr }
#            gateway: { get_input: external_network_gateway }
#            ip: { get_input: external_network_ip}
#            name: { get_input: external_network_name }
#
#          - external: false
#            switch_distributed: { get_input: external_network_switch_distributed }
#            use_dhcp: { get_input: external_network_use_dhcp }
#            network: { get_input: external_network_cidr }
#            gateway: { get_input: external_network_gateway }
#            ip: { get_input: external_network_ip}
#            name: { get_input: external_network_name }

      connection_config: { get_property: [connection_configuration, connection_config] }

#  Provision Public network and subnet

  public_net:
    type: cloudify.vsphere.nodes.Network
    properties:
      network:
            name: public_network
            vlan_id: 101
            vswitch_name: vSwitch0
            switch_distributed: false

#  Provision Application network and subnet

  application_net:
    type: cloudify.vsphere.nodes.Network
    properties:
      network:
            name: application_network
            vlan_id: 102
            vswitch_name: vSwitch0
            switch_distributed: false

