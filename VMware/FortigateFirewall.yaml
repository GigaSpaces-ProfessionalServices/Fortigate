tosca_definitions_version: cloudify_dsl_1_2

imports:
  - http://www.getcloudify.org/spec/cloudify/3.3.1/types.yaml
  - http://www.getcloudify.org/spec/fabric-plugin/1.3.1/plugin.yaml
  - http://www.getcloudify.org/spec/vsphere-plugin/1.3.1/plugin.yaml

inputs:

  agent_user:
    default: admin

  fortinet_template:
   default:  Fortigate

  flavor:
    default: dc1.1x1.20  # flavor should not exced 1024 size of RAM

  agent_password:
    default: admin

  public_network:
    type: string
    default: Public-Net

  application_network:
    type: string
    default: Application-Net

  server_cpus:
    type: string
    default: 1
    description: >
      Count cpu on manager node

  server_memory:
    type: string
    default: 1024
    description: >
      Manager host memory allocation


  external_network_name:
    type: string
    default: external

  management_network_name:
     type: string
     default: cloudify-management-network

node_types:

  port_node_type:
     derived_from: cloudify.nodes.SoftwareComponent

node_templates:

  fortinetServer:
    type: cloudify.vsphere.nodes.Server
    properties:
      server:
        name: Fortigate
        template: { get_input:  fortinet_template }
        cpus: { get_input: server_cpus }
        memory: { get_input: server_memory }

      install_agent: false

      networking:
        connect_networks:
          - management: true
            switch_distributed: { get_input: management_network_switch_distributed }
            use_dhcp: { get_input: management_network_use_dhcp }
            network: { get_input: management_network_cidr }
            gateway: { get_input: management_network_gateway }
            ip: { get_input: management_network_ip}
            name: { get_input: management_network_name }

          - external: true
            switch_distributed: { get_input: external_network_switch_distributed }
            use_dhcp: { get_input: external_network_use_dhcp }
            network: { get_input: external_network_cidr }
            gateway: { get_input: external_network_gateway }
            ip: { get_input: external_network_ip}
            name: { get_input: external_network_name }

          - external: false
            switch_distributed: { get_input: external_network_switch_distributed }
            use_dhcp: { get_input: external_network_use_dhcp }
            network: { get_input: external_network_cidr }
            gateway: { get_input: external_network_gateway }
            ip: { get_input: external_network_ip}
            name: { get_input: external_network_name }

#  Provision Public network and subnet

  public_net:
    type: cloudify.vsphere.nodes.Network
    properties:
      network:
            name: public_network
            vlan_id: 101
            vswitch_name: vSwitch0
            switch_distributed: false

#  Provision Application network and subnet

  application_net:
    type: cloudify.vsphere.nodes.Network
    properties:
      network:
            name: application_network
            vlan_id: 102
            vswitch_name: vSwitch0
            switch_distributed: false



